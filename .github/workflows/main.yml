name: Update Filter Lists

on:
  schedule:
    - cron: "0 17 * * 0"
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: production

jobs:
  cgps:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: "timvoaus/CF"
          ref: "main"

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install npm dependencies
        run: npm ci

      - name: Download allowlists
        run: npm run download:allowlist
        env:
          ALLOWLIST_URLS: ${{ vars.ALLOWLIST_URLS }}

      - name: Download blocklists
        run: npm run download:blocklist
        env:
          BLOCKLIST_URLS: ${{ vars.BLOCKLIST_URLS }}

      - name: Delete old rules and lists
        id: delete_old_lists
        run: npm run cloudflare-delete
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_LIST_ITEM_LIMIT: ${{ secrets.CLOUDFLARE_LIST_ITEM_LIMIT }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          FAST_MODE: ${{ vars.FAST_MODE }}

      - name: Create new rules and lists
        id: create_new_lists
        run: npm run cloudflare-create
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_LIST_ITEM_LIMIT: ${{ secrets.CLOUDFLARE_LIST_ITEM_LIMIT }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          FAST_MODE: ${{ vars.FAST_MODE }}

      # - name: Send ping request
      #   if: env.PING_URL != ''
      #   run: |
      #     curl "${{ env.PING_URL }}"
      #   env:
      #     PING_URL: ${{ secrets.PING_URL }}
  
      - name: Notify on failure
        if: failure()
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ⛔ Workflow failed!
            
            Delete old rules and lists: ${{ steps.delete_old_lists.outcome }}
            Create new rules and lists: ${{ steps.create_new_lists.outcome }}
            Link: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      
      - name: Notify on success
        if: success()
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ✅ Workflow succeeded!
            
            Delete old rules and lists: ${{ steps.delete_old_lists.outcome }}
            Create new rules and lists: ${{ steps.create_new_lists.outcome }}
            Link: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}      

  keepalive-job:
    name: Keepalive Workflow
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@v4
      - uses: gautamkrishnar/keepalive-workflow@v2
